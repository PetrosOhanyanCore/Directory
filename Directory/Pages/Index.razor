@page "/"
@using Directory.Models;
@using Directory.Services;
@inject IDirectoryService _directoryService;

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

@*<SurveyPrompt Title="How is Blazor working for you?" />*@

<div>
    <MudTable Items="response.data.folders" Hover="true" Striped="true" Dense="true" Class="mb-2">
        <HeaderContent>
            <MudTh>Directory</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.name</MudTd>
        </RowTemplate>
    </MudTable>

    <MudTable Items="response.data.files" Hover="true" Striped="true" Dense="true" Class="mb-2">
        <HeaderContent>
            <MudTh>Files</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.name</MudTd>
            <MudTd DataLabel="Size">@context.size</MudTd>
        </RowTemplate>
    </MudTable>
</div>

@code {
    List<string> list = new();
    Response response = new Response();
    List<File> Files = new List<File>();
    List<Folder> Folders = new List<Folder>();

    private string _currentDirectory;


    async Task GetContent(string path)
    {
        response = new();
        response = await _directoryService.GetCurrentDirectoryContent(path);
    }

    async Task GetCurrentDirectory()
    {
        response.data.folders = new List<Folder>();
        response.data.files = new List<File>();
        _currentDirectory = await _directoryService.GetCurrentDirectory();
        response = await _directoryService.GetCurrentDirectoryContent(_currentDirectory);        
    }

    protected override async Task OnInitializedAsync()
    {
        
        await GetCurrentDirectory();
    }

}
